@article{SAHARA2014,
author = {佐原, 宏典},
doi = {10.11348/reajshinrai.36.8_476},
file = {:home/shingo/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/佐原 - 2014 - 超小型衛星の定量的なアーキテクチャ評価の提案.pdf:pdf},
issn = {0919-2697},
journal = {日本信頼性学会誌 : 信頼性},
mendeley-groups = {Research,Research/SystemEngineering},
month = {nov},
number = {8},
pages = {476--483},
publisher = {日本信頼性学会},
title = {超小型衛星の定量的なアーキテクチャ評価の提案},
volume = {36},
year = {2014}
}
@article{SHIRASAKA2011,
author = {SHIRASAKA, Seiko and ISHIBASHI, Kanenori and NAKASUKA, Shinichi},
journal = {The Proceedings of the Space Engineering Conference},
keywords = {Nano,Reliability,Systems Engineering,satellite},
mendeley-groups = {Research,Research/SystemEngineering},
month = {jan},
number = {0},
pages = {1--4},
publisher = {Japan Society of Mechanical Engineers},
title = {{F4 Study on Reasonably Reliable Systems Engineering for nano-Satellite}},
volume = {2010.19},
year = {2011}
}
@article{Cappaert2018,
author = {Cappaert, Jeroen},
file = {:home/shingo/Documents/university/lab/paper/SmartManufacturing/Building Deploying and Operating a Cubesat Constellation - Explo.pdf:pdf},
journal = {Small Satellite Conference 2018},
mendeley-groups = {SmartManufacturing},
pages = {1--7},
title = {{Building , Deploying and Operating a Cubesat Constellation - Exploring the Less Obvious Reasons Space is Hard}},
year = {2018}
}
@article{Alanazi2018,
abstract = {There are multiple common reasons for CubeSats' failure. These include power, mechanical, and communications issues. Some have suggested that the problem lies within the design and development process itself, in that universities and research institutions mainly focus on system and component level designs, while neglecting requirements' elicitation needed beforehand. A survey was conducted during the 14 th Annual CubeSat Workshop at CalPoly, San Luis Obispo, to identify the challenges and needs of such groups and initial results from this survey and its analysis are reported in this paper. This survey was conducted with students in the U. S. and Europe, working on small spacecraft development and majoring in disciplines including computer science and mechanical engineering. The survey considered multiple factors prospectively associated with mission success or failure, including the possibility of adding or deleting components into/from the system design and system modifications' feasibility. Additionally, the respondents were asked the objectives of their CubeSat mission and whether their system design covered the entire system (e.g., structure, behavior, requirements, and system parametric). The problems identified by them related to tools, models, or both have also been reported. Finally, participants were asked whether they helped in reducing the system testing time or employed a CubeSat reference model. This paper concludes with a discussion regarding what has been learned from data analysis. Plans for future work are also discussed.},
author = {Alanazi, Abdulaziz and Straub, Jeremy},
file = {:home/shingo/Documents/university/lab/paper/SystemEngineering/Statistical Analysis of CubeSat Mission Failure.pdf:pdf},
isbn = {7012318562},
mendeley-groups = {Research/SystemEngineering},
pages = {1--8},
title = {{SSC18-WKII-04 Statistical Analysis of CubeSat Mission Failure}},
year = {2018}
}
@article{SAITO2011,
abstract = {The author statistically analyzed on-orbit failure data of recent Japanese satellites based on primary investigations of satellite failures. Random parts failures are only 11% among failures whose causes are identified after investigations. Instead failures caused by design defects (57%) and manufacturing defects (32%) are dominant for on-orbit satellite failures. Propulsion and solar paddle subsystems have a relatively large number of failures caused by design and manufacturing defects, against which redundant system are uncertainly effective. Mission instruments have a large number of failures caused by design defects. Bus subsystems except for propulsion and solar paddle subsystems have a relatively small number of failures. For these bus subsystems, failures tend to happen deterministically and redundant system may not be effective. A probability model of on-orbit failures taking into account design, manufacturing and ground tests is proposed based on the statistical analyses. Copyright {\textcopyright}2010 by the International Astronautical Federation. All rights reserved.},
author = {SAITO, Hirobumi},
doi = {10.2322/jjsass.59.190},
file = {:home/shingo/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/SAITO - 2011 - Secondary Analysis on On-Orbit Failures of Satellite.pdf:pdf},
issn = {1344-6460},
journal = {JOURNAL OF THE JAPAN SOCIETY FOR AERONAUTICAL AND SPACE SCIENCES},
keywords = {On,Orbit Failure,Random Failure,Redundant System,Satellite Reliability},
mendeley-groups = {Research/SystemEngineering},
number = {690},
pages = {190--196},
publisher = {一般社団法人 日本航空宇宙学会},
title = {{Secondary Analysis on On-Orbit Failures of Satellite}},
url = {http://joi.jlc.jst.go.jp/JST.JSTAGE/jjsass/59.190?from=CrossRef},
volume = {59},
year = {2011}
}
@article{Langer2016,
abstract = {In this paper we investigate the data on 178 launched CubeSats and conduct a nonparametric and parametric analysis, where the dead-on-arrival (DOA) cases as well as the subsystem contribution to failure are specifically addressed. Using Maximum Likelihood Estimation, a Single Weibull and a 2-Weibull mixture parametric model are fitted to the non-parametric data. Furthermore, by combining developers' beliefs on several reliability aspects from a survey conducted in late 2014 with data from past missions, we make a first attempt to correlate space engineering “best guesses” and intuition to actual data. Finally, the probabilistic CubeSat reliability estimation tool is introduced as a method to reduce the infant mortality of CubeSats: CubeSat developers should be able to estimate their required functional testing time on subsystem and system level at an early project stage, while targeting a desired reliability goal on their CubeSat.},
author = {Langer, M and Boumeester, J},
file = {:home/shingo/Documents/university/lab/paper/SystemEngineering/Reliability of CubeSats - Statistical Data Developers Beliefs a .pdf:pdf},
journal = {Proceedings of 30th Annual AIAA/USU Conference on Small Satellites},
mendeley-groups = {Research/SystemEngineering},
pages = {1--12},
title = {{Reliability of CubeSats – Statistical Data, Developers' Beliefs and the Way Forward}},
url = {https://repository.tudelft.nl/islandora/object/uuid:4c6668ff-c994-467f-a6de-6518f209962e?collection=research},
year = {2016}
}
@techreport{Swartwout2016,
author = {Swartwout, Michael},
file = {:home/shingo/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Swartwout - 2016 - CubeSats and Mission Success A Look at the Numbers Motivation and Agenda.pdf:pdf},
mendeley-groups = {Research/SystemEngineering},
title = {{CubeSats and Mission Success: A Look at the Numbers Motivation and Agenda}},
year = {2016}
}
@techreport{Venturini2017,
abstract = {As a concept, the CubeSat class of satellite is over 15 years old. The first were launched in 2003 and a few more in 2006. The numbers were noticeably greater in 2009 and have been increasing at a rapid pace ever since. However, if mission success is defined as simply the degree to which the mission goals were achieved, then the mission success of this class of satellite has been low. To find out why, our mission assurance topic team interviewed CubeSat developers in academia, industry, and government-funded research centers. The information in this document comes from the interview responses to a common set of questions that were posed to guide, but not limit, these conversations. Those who have built and flown satellites generously shared their processes, circumstances, results, and lessons learned, and everyone interviewed shared their current processes and philosophies on design, testing, and mission assurance. While root cause was not determined for most on-orbit anomalies, the theories of what possibly went wrong were still useful, as were the lessons learned on what could have been improved during the development process. The responses were grouped into themes which concluded with simple, actionable recommendations that we believe will improve the likelihood of mission success of future CubeSat development projects.},
author = {Venturini, Catherine C},
file = {::},
title = {{Improving Mission Success of CubeSats}},
year = {2017}
}
@techreport{JAXA,
file = {:home/shingo/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - Unknown - 宇宙航空研究開発機構 安全・信頼性推進部 JAXA（Japan Aerospace Exploration Agency）.pdf:pdf},
mendeley-groups = {Research/SystemEngineering},
title = {{宇宙航空研究開発機構 安全・信頼性推進部 JAXA（Japan Aerospace Exploration Agency）}}
}
@article{Yamada2008,
abstract = {This paper proposes a method of standardizing spacecraft and their ground systems by using a spacecraft functional model. This model provides a standard way of designing and describing the functions of onboard components. It also enables development of a standard database that stores functional information on any spacecraft and any component. To monitor and control spacecraft and their components, we have developed a standard protocol called the Spacecraft Monitor and Control Protocol (SMCP). By using the fact that the functional information on any spacecraft and any component can be retrieved from the standard database, the design of SMCP is kept very simple. SMCP specifies types of command and telemetry messages, and the formats of command and telemetry messages for each specific spacecraft are stored in the standard database, too. Although onboard components are not necessarily standardized by this method, it can be said that the functional and operational aspects of components can be "virtually" standardized because the functional and operational information on components can be retrieved from the standard database. Furthermore, software that can be used to monitor and control any spacecraft and any component can be developed because it can retrieve the functional and operational information on specific spacecraft and their components from the standard database. This software can be used for testing components and spacecraft at the test center, operating spacecraft at the control center, and operating spacecraft autonomously on an onboard computer. Therefore, this method leads to standardization of both spacecraft and ground systems. {\textcopyright} 2008 by the American Institute of Aeronautics and Astronautics, Inc. All rights reserved.},
author = {Yamada, Takahiro},
doi = {10.2514/6.2008-3423},
file = {:home/shingo/Documents/university/lab/paper/SystemEngineering/6.2008-3423.pdf:pdf},
isbn = {9781624101670},
journal = {SpaceOps 2008 Conference},
mendeley-groups = {Research/SystemEngineering},
pages = {1--7},
title = {{Standardization of spacecraft and ground systems based on a spacecraft functional model}},
year = {2008}
}
@article{Swartwout2018,
abstract = {In 2018, university-class satellites-spacecraft built by university students for the express purpose of student training-are widely accepted as a means to recruit undergraduate students into the space workforce, train them effectively before graduation and retain them in the field after graduation. Hundreds of undergraduates at dozens of schools around the world have directly contributed to missions that operated on-orbit. The spacecraft themselves are capable of performance research-grade science or demonstrate new enabling technologies. This was not always the case. For the first forty years of spaceflight, there were exceedingly few university-class missions; those that flew were expensive, marginally-performing and had modest success rates. What changed? Why are university-class missions now commonplace? And, with respect to on-orbit success, are they as good (or as bad) as rumor and hearsay make them out to be? In this paper and all-too-brief talk, the history of university-class spacecraft will be discussed, with an emphasis on the types of missions and their success rates. Beginning in 1994 (the author's first time attending this conference, as a wide-eyed student) and reaching through to 2018 (the author's 21st, now as a world-weary professor) a statistical and anecdotal review of university-class spacecraft will be presented. Particular attention will be paid to addressing these questions: 1) What kinds of missions have been flown, are being flown and should be flown? 2) What are historical and present-day mission success rates for university-class missions? 3) Why are the mission success rates so poor?},
author = {Swartwout, Michael},
file = {:home/shingo/Documents/university/lab/paper/SystemEngineering/Univ-Sat-experience_faculty.pdf:pdf},
journal = {Proceedings of the 32nd AIAA/USU Conference on Small Satellites},
mendeley-groups = {Research/SystemEngineering},
pages = {1--20},
title = {{Reliving 24 Years in the Next 12 Minutes: A Statistical and Personal History of University-Class Satellites}},
url = {https://digitalcommons.usu.edu/cgi/viewcontent.cgi?article=4277&context=smallsat},
year = {2018}
}
@article{Yamaguchi2014,
author = {Yamaguchi, Kota and Koichi, Hori},
file = {:home/shingo/Documents/university/lab/paper/FaultDiagnosis/521.pdf:pdf},
mendeley-groups = {Research/FaultDiagnosis},
pages = {1--4},
title = {{Fault Network Analysis of Artificial Satellite Using Ontology}},
year = {2014}
}
@article{Sampath1998,
abstract = {The need for accurate and timely diagnosis of system failures and the advantages of automated diagnostic systems are well appreciated. However, diagnosability considerations are often not explicitly taken into account in the system design. In particular, design of the controller and that of the diagnostic subsystem are decoupled, and this may significantly affect the diagnosability properties of a system. In this paper the authors present an integrated approach to control and diagnosis. More specifically, they present an approach for the design of diagnosable systems by appropriate design of the system controller. This problem, which they refer to as the active diagnosis problem, is studied in the framework of discrete-event systems (DES's); it is based on prior and new results on the theory of diagnosis for DES's and on existing results in supervisory control under partial observations. They formulate the active diagnosis problem as a supervisory control problem where the legal language is an "appropriate" regular sublanguage of the regular language generated by the system. They present an iterative procedure for determining the supremal controllable, observable, and diagnosable sublanguage of the legal language and for obtaining the supervisor that synthesizes this language. This procedure provides both a controller that ensures diagnosability of the closed-loop system and a diagnoser for online failure diagnosis. The procedure can be implemented using finite-state machines and is guaranteed to converge in a finite number of iterations. The authors illustrate their approach using a simple pump-valve system.},
author = {Sampath, Meera and Lafortune, St{\'{e}}phane and Teneketzis, Demosthenis},
doi = {10.1109/9.701089},
file = {:home/shingo/Documents/university/lab/paper/FaultDiagnosis/00701089.pdf:pdf},
issn = {00189286},
journal = {IEEE Transactions on Automatic Control},
keywords = {Discrete-event systems,Failure diagnosis,Finite-state machines},
mendeley-groups = {Research/FaultDiagnosis},
number = {7},
pages = {908--929},
title = {{Active diagnosis of discrete-event systems}},
volume = {43},
year = {1998}
}
@article{Silva2018,
abstract = {Operational simulators have a fundamental role in space programs. During a satellite operation, these simulators are essential for validating critical manoeuvres, testing new on-board software versions, and supporting the diagnosis of anomalies. With the purpose of reusing the operational simulators, the Brazilian National Institute for Space Research has proposed a new standard for the specification of the components that must be integrated in their in-house developed simulators. The new standard describes the behaviour of satellite subsystems using cause-effect tables that relate telecommands, electrical switches, equipment working states, energy consumption, telemetries, and operating modes of the subsystem. Using this new standard as input, this work proposes an approach that merges model-based testing and model checking to verify the correct implementation of new components in the satellite simulator. The verification approach consists of extracting state machines from the cause-effect tables and used it to automatically derive a test case suite. In order to validate the proposal, we applied it to three different satellite subsystems and assessed the results obtained from the test campaigns. In all the three cases, the proposed approach identified errors in the simulator components that were not initially detected by the traditional testing approach used at the Brazilian National Institute for Space Research.},
author = {Silva, Paulo Diego Barbosa Da and Ambrosio, Ana Maria and Villani, Emilia},
doi = {10.1155/2018/3847843},
file = {:home/shingo/Documents/university/lab/paper/SystemsEngineering/MBSE/3847843.pdf:pdf},
issn = {16875605},
journal = {Modelling and Simulation in Engineering},
mendeley-groups = {Research/FaultDiagnosis},
title = {{Model-Based Testing Applied to Software Components of Satellite Simulators}},
volume = {2018},
year = {2018}
}
@article{Lyu2019,
abstract = {A new analytical fault diagnosis method is presented for the yaw and yaw rate estimation of a quadrotor. In the existing methods, the faults of the inertial sensors and the measurement sensors are treated separately. The presented method can deal with the faults of both the z-axis gyro and the magnetic sensor by introducing the torque model, which is used as a virtual sensor. The filter design, fault detection, isolation and recovery strategies are discussed. Real flight data is used to validate the proposed approach, showing that both the z-axis gyro fault and the magnetic sensor fault can be detected.},
author = {Lyu, Pin and Liu, Shichao and Lai, Jizhou and Liu, Jianye},
doi = {10.1016/j.conengprac.2019.03.010},
file = {:home/shingo/Documents/university/lab/paper/FaultDiagnosis/1-s2.0-S0967066118306038-main.pdf:pdf},
issn = {09670661},
journal = {Control Engineering Practice},
keywords = {Analytical redundancy,Fault diagnosis,Quadrotor,Torque model,Yaw estimation,Yaw rate estimation},
mendeley-groups = {Research/FaultDiagnosis},
number = {March},
pages = {118--128},
publisher = {Elsevier Ltd},
title = {{An analytical fault diagnosis method for yaw estimation of quadrotors}},
url = {https://doi.org/10.1016/j.conengprac.2019.03.010},
volume = {86},
year = {2019}
}
@techreport{1997,
author = {來村徳信 and 吉川信治 and 笹島宗彦 and 池田満 and 小澤健二 and 溝口理一郎},
booktitle = {人工知能},
doi = {10.11517/JJSAI.12.1_132},
file = {:home/shingo/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/徳信 et al. - 1997 - モデルに基づく問題解決のための流体系と時間のオントロジーの構築とその評価.pdf:pdf},
issn = {2188-2266},
keywords = {based problem solving,causal understanding,model,ontology,qualitative reasoning},
mendeley-groups = {Research/FaultDiagnosis},
month = {jan},
number = {1},
pages = {132--143},
publisher = {一般社団法人 人工知能学会},
title = {モデルに基づく問題解決のための流体系と時間のオントロジーの構築とその評価},
volume = {12},
year = {1997}
}
@article{Ontology1998,
author = {Yoshinobu, Kitamura and Mizoguchi, Riichiro},
file = {:home/shingo/Documents/university/lab/paper/FaultDiagnosis/kita-jsai99a.pdf:pdf},
keywords = {diagnosis,model-based reasoning,modeling,ontology},
mendeley-groups = {Research/FaultDiagnosis},
pages = {1--10},
title = {{An Ontology of Faults - Articulation and Organization -}},
year = {1998}
}
@article{Struss1989,
abstract = {The General Diagnostic Engine (GDE) provides an elegant and generalvframework for model-based diagnosis. However, like many other diagnostic systems, GDE's device models capture only the correct, or intended, behavior of its components. I t is lacking an important part of diagnostic reasoning: knowledge about how components may behave when they are faulty. This fact can limi t the performance of GDE considerably. We present a solution for integrating the use of fault models into GDE in a very homogeneous way, a system called GDE + . Unlike the basic GDE, it can not only exploit contradictions between the assumed correct behavior of components and the observations, but also analyze whether the faultiness of components would really explain the observations. Based on an extended version of the ATMS, GDE + is able to prove the correctness of components and to rule out implausible diagnostic hypotheses.},
author = {Struss, Peter and Dressier, Oskar},
file = {:home/shingo/Documents/university/lab/paper/FaultDiagnosis/075.pdf:pdf},
mendeley-groups = {Research/FaultDiagnosis},
pages = {1318--1323},
title = {{"Physical Negation" - Integrating Fault Models into the General Diagnostic Engine}},
volume = {89},
year = {1989}
}
@phdthesis{Kitamura1999,
author = {徳信, 來村 and 稔人, 西原 and 正彦, 植田 and 満, 池田 and 聡, 小堀 and 収, 角所 and 理一郎, 溝口},
booktitle = {人工知能},
doi = {10.11517/JJSAI.14.5_838},
issn = {2188-2266},
keywords = {based reasoning,diagnosis,model,modeling,ontology},
mendeley-groups = {Research/FaultDiagnosis},
month = {sep},
number = {5},
pages = {838--847},
publisher = {一般社団法人 人工知能学会},
title = {故障オントロジーの考察に基づく故障診断方式 : 網羅的故障仮説生成},
volume = {14},
year = {1999}
}

